[{"/Users/tiffanychen/Documents/uiux/development/src/index.js":"1","/Users/tiffanychen/Documents/uiux/development/src/reportWebVitals.js":"2","/Users/tiffanychen/Documents/uiux/development/src/App.jsx":"3","/Users/tiffanychen/Documents/uiux/development/src/FilteredList.jsx":"4","/Users/tiffanychen/Documents/uiux/development/src/DisplayList.jsx":"5","/Users/tiffanychen/Documents/uiux/development/src/DisplayCart.jsx":"6"},{"size":500,"mtime":1606827093772,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1606827093773,"results":"9","hashOfConfig":"8"},{"size":4097,"mtime":1606931914046,"results":"10","hashOfConfig":"8"},{"size":4093,"mtime":1606930705948,"results":"11","hashOfConfig":"8"},{"size":1080,"mtime":1606930484977,"results":"12","hashOfConfig":"8"},{"size":1155,"mtime":1606930486596,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bfcfb5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/tiffanychen/Documents/uiux/development/src/index.js",[],["31","32"],"/Users/tiffanychen/Documents/uiux/development/src/reportWebVitals.js",[],"/Users/tiffanychen/Documents/uiux/development/src/App.jsx",["33"],"import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport FilteredList from \"./FilteredList.jsx\"\nimport DisplayCart from \"./DisplayCart.jsx\"\n\n\nclass App extends React.Component {\n\n  /*\n  constructor for the App class\n  */\n  constructor(props) {\n    super(props)\n    this.state = {\n      /*\n       productlist: list of book items with the properties name, printtype, genre, price, image\n       cart: the shopping cart used to keep track of book items in the aggregator \n       total: total price in the shopping cart\n       */\n      productList: [\n        {\n          name: \"Harry Potter & the Deathly Hallows\", printtype: \"Paperback\", genre: \"Fiction\", price: 10,\n          image: \"https://images-na.ssl-images-amazon.com/images/I/71sH3vxziLL.jpg\"\n        },\n        {\n          name: \"Romeo & Juliet\", printtype: \"Hardcover\", genre: \"Play\", price: 20,\n          image: \"https://prodimage.images-bn.com/pimages/9781451621709_p0_v5_s1200x630.jpg\"\n        },\n        {\n          name: \"Becoming\", printtype: \"EBook\", genre: \"Non-Fiction\", price: 35,\n          image: \"https://m.media-amazon.com/images/I/81h2gWPTYJL.jpg\"\n        },\n        {\n          name: \"Gone Girl\", printtype: \"Hardcover\", genre: \"Fiction\", price: 10,\n          image: \"https://images-na.ssl-images-amazon.com/images/I/81g5ooiHAXL.jpg\"\n        },\n        {\n          name: \"The Great Gatsby\", printtype: \"Paperback\", genre: \"Fiction\", price: 15,\n          image: \"https://images-na.ssl-images-amazon.com/images/I/81af+MCATTL.jpg\"\n        },\n        {\n          name: \"Hamlet\", printtype: \"Paperback\", genre: \"Play\", price: 10,\n          image: \"https://www.memoriapress.com/wp-content/uploads/2018/07/Hamlet-Student-Cover-Saddle.jpg\"\n        },\n        {\n          name: \"The Odyssey\", printtype: \"EBook\", genre: \"Fiction\", price: 18,\n          image: \"https://images-na.ssl-images-amazon.com/images/I/51FR8mSgqoL._SX346_BO1,204,203,200_.jpg\"\n        },\n        {\n          name: \"Madame Bovary\", printtype: \"Paperback\", genre: \"Fiction\", price: 13,\n          image: \"https://almabooks.com/wp-content/uploads/2016/10/9781847493224.jpg\"\n        },\n        {\n          name: \"A Brief History of Time\", printtype: \"Hardcover\", genre: \"Non-Fiction\", price: 30,\n          image: \"https://i.pinimg.com/originals/0e/4a/3b/0e4a3b402a182777a4b3420efbf64be3.jpg\"\n        },\n        {\n          name: \"Freakonomics\", printtype: \"Hardcover\", genre: \"Non-Fiction\", price: 22,\n          image: \"https://images-na.ssl-images-amazon.com/images/I/51nyohMG0cL._AC_SY400_.jpg\"\n        },\n        {\n          name: \"Macbeth\", printtype: \"EBook\", genre: \"Play\", price: 10,\n          image: \"https://prodimage.images-bn.com/pimages/9780743477109_p0_v3_s1200x630.jpg\"\n        },\n        {\n          name: \"The Chronicles of Narnia\", printtype: \"Paperback\", genre: \"Fiction\", price: 12,\n          image: \"https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQ1bgwAwdZYXoB3y0ra7FqNYyrJ4vNF-0MpNDt4s0cU4NaUlMzO\"\n        }\n      ],\n      cart: [],\n      total: 0\n    }\n  }\n\n  /*\n  method to add items to the aggregated cart\n  */\n  addCart = item => {\n    const cart = [...this.state.cart, item]\n    const total = cart.reduce((total, item) => { return total + item.price }, 0)\n    this.setState({ cart });\n    this.setState({ total });\n  };\n\n  /*\n  method to remove items from the aggregated cart\n  */\n  removeCart = item => {\n    const cart = this.state.cart.filter(x => x !== item)\n    const total = cart.reduce((total, item) => { return total + item.price }, 0)\n    this.setState({ cart });\n    this.setState({ total });\n  };\n\n  /*\n  render function, calls on FilteredList and DisplayCart \n  */\n  render() {\n    return (\n      <div class=\"flex-container-row\">\n        <div class=\"col-9\">\n          <h1>Bookstore</h1>\n          <FilteredList list={this.state.productList} addCart={this.addCart} />\n        </div>\n        <div>\n          <h1>Shopping Cart</h1>\n          <h2>Total: ${this.state.total}</h2>\n          <DisplayCart list={this.state.cart} removeCart={this.removeCart} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","/Users/tiffanychen/Documents/uiux/development/src/FilteredList.jsx",["34"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport DisplayList from \"./DisplayList.jsx\"\n\n/**\n * class FilteredList: contains the methods for filtering and sorting \n */\nclass FilteredList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            printtype: \"All\",\n            genre: \"All\",\n            sort: \"None\"\n        };\n    }\n\n    /**\n     * method for setting the state of printtype\n     */\n    onSelectFilterType = event => {\n        this.setState({\n            printtype: event\n        })\n    };\n\n    /**\n     * method for setting the state of genre\n     */\n    onSelectFilterGenre = event => {\n        this.setState({\n            genre: event\n        })\n    };\n\n    /**\n     * method for setting the state of sort\n     */\n    onSelectFilterSort = event => {\n        this.setState({\n            sort: event\n        })\n    };\n\n    /**\n     * method that matches each item's genre or printtype to the state's genre or printtype. \n     * this is used for the filter. \n     */\n    matchesFilter = item => {\n        // all items should be shown when no filter is selected\n        if (this.state.printtype === \"All\" && this.state.genre === \"All\") {\n            return true\n        } else if (this.state.printtype === item.printtype && this.state.genre === \"All\") {\n            return true\n        } else if (this.state.genre === item.genre && this.state.printtype === \"All\") {\n            return true\n        } else if (this.state.genre === item.genre && this.state.printtype === item.printtype) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * method to sort the items based on price\n     */\n    toSort = list => {\n        if(this.state.sort === \"Low to High\"){\n            return list.sort((item1, item2) => item1.price - item2.price)\n        } else if(this.state.sort === \"High to Low\"){\n            return list.sort((item1, item2) => item1.price - item2.price).reverse()\n        } else{\n            return list.sort((item1, item2) => 0)\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    Print Type:\n                    <Nav.Item><Nav.Link eventKey=\"All\" onSelect={this.onSelectFilterType}>All</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"Hardcover\" onSelect={this.onSelectFilterType}>Hardcover</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"Paperback\" onSelect={this.onSelectFilterType}>Paperback</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"EBook\" onSelect={this.onSelectFilterType}>EBook</Nav.Link></Nav.Item>\n                </Navbar>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    Genre:\n                    <Nav.Item><Nav.Link eventKey=\"All\" onSelect={this.onSelectFilterGenre}>All</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"Fiction\" onSelect={this.onSelectFilterGenre}>Fiction</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"Non-Fiction\" onSelect={this.onSelectFilterGenre}>Non-Fiction</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"Play\" onSelect={this.onSelectFilterGenre}>Play</Nav.Link></Nav.Item>\n                </Navbar>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    Sort Price\n                    <Nav.Item><Nav.Link eventKey=\"None\" onSelect={this.onSelectFilterSort}>None</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"Low to High\" onSelect={this.onSelectFilterSort}>Low to High</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link eventKey=\"High to Low\" onSelect={this.onSelectFilterSort}>High to Low</Nav.Link></Nav.Item>\n                </Navbar>\n                <DisplayList list={this.toSort(this.props.list.filter(this.matchesFilter))}  addCart={this.props.addCart}/>\n            </div>\n        )\n    }\n\n}\n\n\nexport default FilteredList;","/Users/tiffanychen/Documents/uiux/development/src/DisplayList.jsx",["35","36"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\n\nimport {\n  Button\n} from '@material-ui/core'\n\n/**\n * class DisplayList: displays the book items in the browsing section, called in FilteredList\n */\nclass DisplayList extends React.Component {\n\n  /*\n    method to create a div to display each book item\n  */\n  createTask = item => {\n    return (\n      <div class=\"flex-container-col2\">\n        <div class=\"center\"><h6>Name: {item.name}</h6></div>\n        <div>Print Type: {item.printtype}</div>\n        <div>Genre: {item.genre}</div>\n        <div>Price: ${item.price}</div>\n        <div><img src={item.image} height=\"200\" width=\"130\" /></div>\n        <div><Button variant=\"contained\" onClick={() => this.props.addCart(item)}>Add to Cart</Button></div>\n      </div >\n    )\n  }\n\n  /*\n  method to display the list of items with a flexbox\n  */\n  render() {\n    const entries = this.props.list;\n    const listItems = entries.map(this.createTask)\n    return (\n      <div class=\"flex-container-row\">{listItems}</div>\n    )\n  }\n}\n\nexport default DisplayList;","/Users/tiffanychen/Documents/uiux/development/src/DisplayCart.jsx",["37","38"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\n\nimport {\n    Button\n} from '@material-ui/core'\n\n/**\n * class DisplayCart: displays the book items in the aggregator section\n */\nclass DisplayCart extends React.Component {\n\n    /*\n    method to create a div to display each book item\n    */\n    createTask = item => {\n        return (\n            <div class=\"flex-container-col3\">\n                <div class=\"center\"><h6>Name: {item.name}</h6></div>\n                <div>Print Type: {item.printtype}</div>\n                <div>Genre: {item.genre}</div>\n                <div>Price: ${item.price}</div>\n                <div><img src={item.image} height=\"200\" width=\"130\" /></div>\n                <Button variant=\"contained\" onClick={() => this.props.removeCart(item)}>Remove</Button>\n            </div >\n        )\n    }\n\n    /*\n    method to display the list of items with a flexbox\n    */\n    render() {\n        const entries = this.props.list;\n        const listItems = entries.map(this.createTask)\n        return (\n            <div class=\"flex-container-col\">{listItems}</div>\n        )\n    }\n}\n\nexport default DisplayCart;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":24,"column":14,"nodeType":"49","endLine":24,"endColumn":63},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":24,"column":22,"nodeType":"49","endLine":24,"endColumn":71},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]